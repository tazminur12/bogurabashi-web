import React, { useState, useEffect } from "react";
import { useParams, Link, useNavigate } from "react-router-dom";
import useAxiosSecure from "../../../hooks/useAxiosSecure";
import { FaCar, FaPhone, FaMapMarkerAlt, FaMoneyBillWave, FaCalendarAlt, FaUser, FaPrint, FaShare, FaDownload, FaArrowLeft, FaStar, FaShieldAlt, FaGasPump, FaCog, FaUsers, FaInfoCircle } from "react-icons/fa";
import Swal from "sweetalert2";

const RentCarDetails = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const axiosSecure = useAxiosSecure();
  const [car, setCar] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchCarDetails = async () => {
      try {
        setLoading(true);
        const response = await axiosSecure.get(`/rent-cars/${id}`);
        setCar(response.data);
      } catch (err) {
        console.error("Error fetching car details:", err);
        setError("‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá");
      } finally {
        setLoading(false);
      }
    };

    if (id) {
      fetchCarDetails();
    }
  }, [id, axiosSecure]);

  const getStatusColor = (status) => {
    switch (status) {
      case "Available":
        return "bg-green-100 text-green-800";
      case "Rented":
        return "bg-yellow-100 text-yellow-800";
      case "Maintenance":
        return "bg-red-100 text-red-800";
      case "Reserved":
        return "bg-blue-100 text-blue-800";
      default:
        return "bg-gray-100 text-gray-800";
    }
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case "Available":
        return "üü¢";
      case "Rented":
        return "üü°";
      case "Maintenance":
        return "üî¥";
      case "Reserved":
        return "üîµ";
      default:
        return "‚ö™";
    }
  };

  const getStatusLabel = (status) => {
    switch (status) {
      case "Available":
        return "‡¶â‡¶™‡¶≤‡¶¨‡ßç‡¶ß";
      case "Rented":
        return "‡¶≠‡¶æ‡¶°‡¶º‡¶æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ";
      case "Maintenance":
        return "‡¶Æ‡ßá‡¶∞‡¶æ‡¶Æ‡¶§";
      case "Reserved":
        return "‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§";
      default:
        return status || "N/A";
    }
  };

  const getTypeIcon = (type) => {
    switch (type) {
      case "Sedan":
        return "üöó";
      case "SUV":
        return "üöô";
      case "Micro":
        return "üöê";
      case "Luxury":
        return "üèéÔ∏è";
      case "Van":
        return "üöê";
      case "Truck":
        return "üöõ";
      case "Pickup":
        return "üõª";
      case "Bus":
        return "üöå";
      default:
        return "üöó";
    }
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('bn-BD').format(price);
  };

  const handlePrint = () => {
    window.print();
  };

  const handleShare = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: `${car.brand} ${car.model} - ‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶°‡¶º‡¶ø`,
          text: `${car.brand} ${car.model} ‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶â‡¶™‡¶≤‡¶¨‡ßç‡¶ß‡•§ ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ: ‡ß≥${formatPrice(car.rentPerDay)}`,
          url: window.location.href,
        });
      } catch (error) {
        console.log('Error sharing:', error);
      }
    } else {
      // Fallback for browsers that don't support Web Share API
      navigator.clipboard.writeText(window.location.href);
      Swal.fire("‚úÖ ‡¶ï‡¶™‡¶ø ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", "‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶ï‡ßç‡¶≤‡¶ø‡¶™‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá", "success");
    }
  };

  const handleDownload = () => {
    const carInfo = `
‡¶¨‡¶ó‡ßÅ‡¶°‡¶º‡¶æ ‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶°‡¶º‡¶ø - ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø

‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø:
- ‡¶¨‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°: ${car.brand}
- ‡¶Æ‡¶°‡ßá‡¶≤: ${car.model}
- ‡¶¨‡¶õ‡¶∞: ${car.year}
- ‡¶ß‡¶∞‡¶®: ${car.type}
- ‡¶∞‡¶Ç: ${car.color || 'N/A'}
- ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶∏‡¶Æ‡¶ø‡¶∂‡¶®: ${car.transmission || 'N/A'}
- ‡¶ú‡ßç‡¶¨‡¶æ‡¶≤‡¶æ‡¶®‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶®: ${car.fuelType || 'N/A'}
- ‡¶Ü‡¶∏‡¶®‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ: ${car.seats || 'N/A'}

‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø:
- ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ: ‡ß≥${formatPrice(car.rentPerDay)}
- ‡¶∏‡¶æ‡¶™‡ßç‡¶§‡¶æ‡¶π‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ: ${car.rentPerWeek ? `‡ß≥${formatPrice(car.rentPerWeek)}` : 'N/A'}
- ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ: ${car.rentPerMonth ? `‡ß≥${formatPrice(car.rentPerMonth)}` : 'N/A'}

‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø:
- ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï: ${car.ownerName}
- ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó: ${car.contact}
- ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶®: ${car.location}

‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø:
- ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶®: ${car.registrationNumber || 'N/A'}
- ‡¶Æ‡¶æ‡¶á‡¶≤‡ßá‡¶ú: ${car.mileage ? `${car.mileage} ‡¶ï‡¶ø‡¶Æ‡¶ø` : 'N/A'}
- ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ: ${car.condition || 'N/A'}
- ‡¶¨‡ßÄ‡¶Æ‡¶æ: ${car.insurance || 'N/A'}

‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶∏‡¶Æ‡ßÇ‡¶π: ${car.features?.join(', ') || 'N/A'}

‡¶¨‡¶ø‡¶¨‡¶∞‡¶£: ${car.description || 'N/A'}

‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø: ${car.additionalInfo || 'N/A'}

---
‡¶¨‡¶ó‡ßÅ‡¶°‡¶º‡¶æ ‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ
${new Date().toLocaleDateString('bn-BD')}
    `;

    const blob = new Blob([carInfo], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${car.brand}_${car.model}_details.txt`;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  };

  const handleCall = () => {
    if (car.contact) {
      window.location.href = `tel:${car.contact}`;
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-[#f8f9fa] flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent mx-auto mb-4"></div>
          <p className="text-gray-600">‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</p>
        </div>
      </div>
    );
  }

  if (error || !car) {
    return (
      <div className="min-h-screen bg-[#f8f9fa] flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">‚ùå</div>
          <h3 className="text-xl font-medium text-gray-800 mb-2">‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø</h3>
          <p className="text-gray-500 mb-4">{error || "‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø"}</p>
          <Link
            to="/rent-cars"
            className="inline-block px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg text-sm font-medium transition duration-200"
          >
            ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶®
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-[#f8f9fa] py-10">
      <div className="max-w-6xl mx-auto px-4">
        {/* Header */}
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center gap-4">
            <button
              onClick={() => navigate(-1)}
              className="p-2 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200"
            >
              <FaArrowLeft className="text-gray-600" />
            </button>
            <div>
              <h1 className="text-3xl font-bold text-[#333] mb-1">
                {getTypeIcon(car.type)} {car.brand} {car.model}
              </h1>
              <p className="text-sm text-gray-600">‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø</p>
            </div>
          </div>
          
          <div className="flex items-center gap-2">
            <Link
              to="/add-rent-car"
              className="p-2 bg-orange-500 hover:bg-orange-600 text-white rounded-lg transition duration-200"
              title="‡¶®‡¶§‡ßÅ‡¶® ‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®"
            >
              <FaCar />
            </Link>
            <button
              onClick={handlePrint}
              className="p-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition duration-200"
              title="‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®"
            >
              <FaPrint />
            </button>
            <button
              onClick={handleShare}
              className="p-2 bg-green-500 hover:bg-green-600 text-white rounded-lg transition duration-200"
              title="‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®"
            >
              <FaShare />
            </button>
            <button
              onClick={handleDownload}
              className="p-2 bg-purple-500 hover:bg-purple-600 text-white rounded-lg transition duration-200"
              title="‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®"
            >
              <FaDownload />
            </button>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-6">
            {/* Car Overview */}
            <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
              <div className="flex items-center justify-between mb-4">
                <h2 className="text-xl font-semibold text-gray-800">‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h2>
                <span className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(car.status)}`}>
                  {getStatusIcon(car.status)} {getStatusLabel(car.status)}
                </span>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaCar className="text-blue-500 text-lg" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶¨‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° & ‡¶Æ‡¶°‡ßá‡¶≤</p>
                    <p className="font-medium">{car.brand} {car.model}</p>
                  </div>
                </div>
                
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaCalendarAlt className="text-green-500 text-lg" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶¨‡¶õ‡¶∞</p>
                    <p className="font-medium">{car.year}</p>
                  </div>
                </div>
                
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaCog className="text-purple-500 text-lg" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶∏‡¶Æ‡¶ø‡¶∂‡¶®</p>
                    <p className="font-medium">{car.transmission || 'N/A'}</p>
                  </div>
                </div>
                
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaGasPump className="text-orange-500 text-lg" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶ú‡ßç‡¶¨‡¶æ‡¶≤‡¶æ‡¶®‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶®</p>
                    <p className="font-medium">{car.fuelType || 'N/A'}</p>
                  </div>
                </div>
                
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaUsers className="text-indigo-500 text-lg" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶Ü‡¶∏‡¶®‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ</p>
                    <p className="font-medium">{car.seats || 'N/A'}</p>
                  </div>
                </div>
                
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaShieldAlt className="text-red-500 text-lg" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶∞‡¶Ç</p>
                    <p className="font-medium">{car.color || 'N/A'}</p>
                  </div>
                </div>
              </div>
            </div>

            {/* Pricing Information */}
            <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
              <div className="flex items-center gap-2 mb-4">
                <FaMoneyBillWave className="text-green-500" />
                <h2 className="text-xl font-semibold text-gray-800">‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h2>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="text-center p-4 bg-green-50 rounded-lg border border-green-200">
                  <div className="text-2xl font-bold text-green-600">‡ß≥{formatPrice(car.rentPerDay)}</div>
                  <div className="text-sm text-green-700">‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¶‡¶ø‡¶®</div>
                </div>
                
                {car.rentPerWeek && (
                  <div className="text-center p-4 bg-blue-50 rounded-lg border border-blue-200">
                    <div className="text-2xl font-bold text-blue-600">‡ß≥{formatPrice(car.rentPerWeek)}</div>
                    <div className="text-sm text-blue-700">‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶∏‡¶™‡ßç‡¶§‡¶æ‡¶π</div>
                  </div>
                )}
                
                {car.rentPerMonth && (
                  <div className="text-center p-4 bg-purple-50 rounded-lg border border-purple-200">
                    <div className="text-2xl font-bold text-purple-600">‡ß≥{formatPrice(car.rentPerMonth)}</div>
                    <div className="text-sm text-purple-700">‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Æ‡¶æ‡¶∏</div>
                  </div>
                )}
              </div>
            </div>

            {/* Contact Information */}
            <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
              <div className="flex items-center gap-2 mb-4">
                <FaUser className="text-blue-500" />
                <h2 className="text-xl font-semibold text-gray-800">‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h2>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaUser className="text-blue-500" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï</p>
                    <p className="font-medium">{car.ownerName}</p>
                  </div>
                </div>
                
                <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                  <FaMapMarkerAlt className="text-red-500" />
                  <div>
                    <p className="text-sm text-gray-600">‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶®</p>
                    <p className="font-medium">{car.location}</p>
                  </div>
                </div>
              </div>
              
              {car.contact && (
                <div className="mt-4">
                  <button
                    onClick={handleCall}
                    className="w-full bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-lg font-medium transition duration-200 flex items-center justify-center gap-2"
                  >
                    <FaPhone />
                    {car.contact} - ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®
                  </button>
                </div>
              )}
            </div>

            {/* Additional Information */}
            <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
              <div className="flex items-center gap-2 mb-4">
                <FaInfoCircle className="text-blue-500" />
                <h2 className="text-xl font-semibold text-gray-800">‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø</h2>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞</label>
                  <p className="text-gray-900">{car.registrationNumber || 'N/A'}</p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡¶Æ‡¶æ‡¶á‡¶≤‡ßá‡¶ú</label>
                  <p className="text-gray-900">{car.mileage ? `${car.mileage} ‡¶ï‡¶ø‡¶Æ‡¶ø` : 'N/A'}</p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ</label>
                  <p className="text-gray-900">{car.condition || 'N/A'}</p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">‡¶¨‡ßÄ‡¶Æ‡¶æ</label>
                  <p className="text-gray-900">{car.insurance || 'N/A'}</p>
                </div>
              </div>
              
              {car.description && (
                <div className="mb-4">
                  <label className="block text-sm font-medium text-gray-700 mb-2">‡¶¨‡¶ø‡¶¨‡¶∞‡¶£</label>
                  <p className="text-gray-900 bg-gray-50 p-3 rounded-lg">{car.description}</p>
                </div>
              )}
              
              {car.additionalInfo && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø</label>
                  <p className="text-gray-900 bg-gray-50 p-3 rounded-lg">{car.additionalInfo}</p>
                </div>
              )}
            </div>

            {/* Features */}
            {car.features && car.features.length > 0 && (
              <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
                <div className="flex items-center gap-2 mb-4">
                  <FaShieldAlt className="text-purple-500" />
                  <h2 className="text-xl font-semibold text-gray-800">‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶∏‡¶Æ‡ßÇ‡¶π</h2>
                </div>
                
                <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                  {car.features.map((feature, index) => (
                    <div key={index} className="flex items-center gap-2 p-2 bg-purple-50 rounded-lg">
                      <FaStar className="text-purple-500 text-sm" />
                      <span className="text-sm text-purple-700">{feature}</span>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Quick Actions */}
            <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
              <h3 className="text-lg font-semibold text-gray-800 mb-4">‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</h3>
              
              <div className="space-y-3">
                {car.contact && (
                  <button
                    onClick={handleCall}
                    className="w-full bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-lg font-medium transition duration-200 flex items-center justify-center gap-2"
                  >
                    <FaPhone />
                    ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®
                  </button>
                )}
                
                <button
                  onClick={handleShare}
                  className="w-full bg-blue-500 hover:bg-blue-600 text-white py-3 px-4 rounded-lg font-medium transition duration-200 flex items-center justify-center gap-2"
                >
                  <FaShare />
                  ‡¶∂‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
                
                <button
                  onClick={handleDownload}
                  className="w-full bg-purple-500 hover:bg-purple-600 text-white py-3 px-4 rounded-lg font-medium transition duration-200 flex items-center justify-center gap-2"
                >
                  <FaDownload />
                  ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              </div>
            </div>

            {/* Status Card */}
            <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
              <h3 className="text-lg font-semibold text-gray-800 mb-4">‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ</h3>
              
              <div className="text-center">
                <div className={`inline-flex items-center gap-2 px-4 py-2 rounded-full text-sm font-medium ${getStatusColor(car.status)}`}>
                  {getStatusIcon(car.status)} {getStatusLabel(car.status)}
                </div>
                
                <p className="text-sm text-gray-600 mt-2">
                  {car.status === "Available" && "‡¶è‡¶á ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶ü‡¶ø ‡¶è‡¶ñ‡¶®‡¶á ‡¶≠‡¶æ‡¶°‡¶º‡¶æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá"}
                  {car.status === "Rented" && "‡¶è‡¶á ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶ü‡¶ø ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶®‡ßá ‡¶≠‡¶æ‡¶°‡¶º‡¶æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ü‡¶õ‡ßá"}
                  {car.status === "Maintenance" && "‡¶è‡¶á ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶ü‡¶ø ‡¶Æ‡ßá‡¶∞‡¶æ‡¶Æ‡¶§‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶®‡ßç‡¶ß ‡¶Ü‡¶õ‡ßá"}
                  {car.status === "Reserved" && "‡¶è‡¶á ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§ ‡¶Ü‡¶õ‡ßá"}
                </p>
              </div>
            </div>

            {/* Back to List */}
            <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
              <Link
                to="/rent-cars"
                className="w-full bg-gray-500 hover:bg-gray-600 text-white py-3 px-4 rounded-lg font-medium transition duration-200 flex items-center justify-center gap-2"
              >
                <FaArrowLeft />
                ‡¶∏‡¶¨ ‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
              </Link>
            </div>
          </div>
        </div>

        <div className="mt-8 text-gray-500 text-xs text-center">
          ¬© 2025 ‡¶¨‡¶ó‡ßÅ‡¶°‡¶º‡¶æ ‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ | Developed by BoguraBashi
        </div>
      </div>
    </div>
  );
};

export default RentCarDetails; 