import React, { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import useAxiosSecure from "../../../hooks/useAxiosSecure";
import Swal from "sweetalert2";
import { FaCar, FaSave, FaArrowLeft, FaPhone, FaMapMarkerAlt, FaMoneyBillWave, FaInfoCircle, FaCalendarAlt, FaUser, FaShieldAlt } from "react-icons/fa";

const AddRentCar = () => {
  const navigate = useNavigate();
  const axiosSecure = useAxiosSecure();
  const [loading, setLoading] = useState(false);
  const [formData, setFormData] = useState({
    brand: "",
    model: "",
    year: "",
    type: "",
    color: "",
    transmission: "",
    fuelType: "",
    seats: "",
    rentPerDay: "",
    rentPerWeek: "",
    rentPerMonth: "",
    location: "",
    contact: "",
    ownerName: "",
    description: "",
    features: [],
    images: [],
    status: "Available",
    insurance: "",
    registrationNumber: "",
    mileage: "",
    condition: "",
    additionalInfo: ""
  });

  const [errors, setErrors] = useState({});

  const carTypes = [
    { value: "Sedan", label: "üöó ‡¶∏‡ßá‡¶°‡¶æ‡¶®", icon: "üöó" },
    { value: "SUV", label: "üöô ‡¶è‡¶∏‡¶á‡¶â‡¶≠‡¶ø", icon: "üöô" },
    { value: "Micro", label: "üöê ‡¶Æ‡¶æ‡¶á‡¶ï‡ßç‡¶∞‡ßã", icon: "üöê" },
    { value: "Luxury", label: "üèéÔ∏è ‡¶≤‡¶æ‡¶ï‡ßç‡¶∏‡¶æ‡¶∞‡¶ø", icon: "üèéÔ∏è" },
    { value: "Van", label: "üöê ‡¶≠‡ßç‡¶Ø‡¶æ‡¶®", icon: "üöê" },
    { value: "Truck", label: "üöõ ‡¶ü‡ßç‡¶∞‡¶æ‡¶ï", icon: "üöõ" },
    { value: "Pickup", label: "üõª ‡¶™‡¶ø‡¶ï‡¶Ü‡¶™", icon: "üõª" },
    { value: "Bus", label: "üöå ‡¶¨‡¶æ‡¶∏", icon: "üöå" }
  ];

  const transmissionTypes = [
    { value: "Manual", label: "‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶≤" },
    { value: "Automatic", label: "‡¶Ö‡¶ü‡ßã‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï" },
    { value: "CVT", label: "‡¶∏‡¶ø‡¶≠‡¶ø‡¶ü‡¶ø" }
  ];

  const fuelTypes = [
    { value: "Petrol", label: "‡¶™‡ßá‡¶ü‡ßç‡¶∞‡ßã‡¶≤" },
    { value: "Diesel", label: "‡¶°‡¶ø‡¶ú‡ßá‡¶≤" },
    { value: "CNG", label: "‡¶∏‡¶ø‡¶è‡¶®‡¶ú‡¶ø" },
    { value: "Electric", label: "‡¶á‡¶≤‡ßá‡¶ï‡¶ü‡ßç‡¶∞‡¶ø‡¶ï" },
    { value: "Hybrid", label: "‡¶π‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡¶ø‡¶°" }
  ];

  const conditions = [
    { value: "Excellent", label: "‡¶ö‡¶Æ‡ßé‡¶ï‡¶æ‡¶∞" },
    { value: "Good", label: "‡¶≠‡¶æ‡¶≤‡ßã" },
    { value: "Fair", label: "‡¶Æ‡¶æ‡¶ù‡¶æ‡¶∞‡¶ø" },
    { value: "Poor", label: "‡¶ñ‡¶æ‡¶∞‡¶æ‡¶™" }
  ];

  const availableFeatures = [
    "AC", "Power Steering", "Power Windows", "Central Locking", "Music System",
    "GPS Navigation", "Bluetooth", "USB Charger", "Backup Camera", "Airbags",
    "ABS", "Cruise Control", "Leather Seats", "Sunroof", "Alloy Wheels"
  ];

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    
    // Clear error when user starts typing
    if (errors[name]) {
      setErrors(prev => ({
        ...prev,
        [name]: ""
      }));
    }
  };

  const handleFeatureToggle = (feature) => {
    setFormData(prev => ({
      ...prev,
      features: prev.features.includes(feature)
        ? prev.features.filter(f => f !== feature)
        : [...prev.features, feature]
    }));
  };

  const validateForm = () => {
    const newErrors = {};

    if (!formData.brand?.trim()) {
      newErrors.brand = "‡¶¨‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®";
    }
    if (!formData.model?.trim()) {
      newErrors.model = "‡¶Æ‡¶°‡ßá‡¶≤ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®";
    }
    if (!formData.year?.trim()) {
      newErrors.year = "‡¶¨‡¶õ‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®";
    } else if (formData.year < 1990 || formData.year > new Date().getFullYear() + 1) {
      newErrors.year = "‡¶∏‡¶†‡¶ø‡¶ï ‡¶¨‡¶õ‡¶∞ ‡¶¶‡¶ø‡¶®";
    }
    if (!formData.type?.trim()) {
      newErrors.type = "‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®";
    }
    if (!formData.rentPerDay?.trim()) {
      newErrors.rentPerDay = "‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶¶‡¶æ‡¶Æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®";
    } else if (formData.rentPerDay <= 0) {
      newErrors.rentPerDay = "‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶¶‡¶æ‡¶Æ ‡ß¶ ‡¶è‡¶∞ ‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶π‡¶§‡ßá ‡¶π‡¶¨‡ßá";
    }
    if (!formData.location?.trim()) {
      newErrors.location = "‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®";
    }
    if (!formData.contact?.trim()) {
      newErrors.contact = "‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®";
    } else if (!/^(\+88|88)?(01[3-9]\d{8})$/.test(formData.contact)) {
      newErrors.contact = "‡¶∏‡¶†‡¶ø‡¶ï ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶®";
    }
    if (!formData.ownerName?.trim()) {
      newErrors.ownerName = "‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validateForm()) {
      Swal.fire("‚ùå ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø", "‡¶∏‡¶¨ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßÄ‡¶Ø‡¶º ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®", "error");
      return;
    }

    setLoading(true);
    try {
      const response = await axiosSecure.post("/rent-cars", formData);
      
      if (response.data.insertedId) {
        Swal.fire({
          title: "‚úÖ ‡¶∏‡¶´‡¶≤!",
          text: "‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶ü‡¶ø ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá",
          icon: "success",
          confirmButtonText: "‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá"
        }).then(() => {
          navigate("/rent-cars");
        });
      }
    } catch (error) {
      console.error("Error adding car:", error);
      Swal.fire("‚ùå ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø", "‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá", "error");
    } finally {
      setLoading(false);
    }
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('bn-BD').format(price);
  };

  return (
    <div className="min-h-screen bg-[#f8f9fa] py-10">
      <div className="max-w-4xl mx-auto px-4">
        {/* Header */}
        <div className="flex items-center justify-between mb-6">
          <div>
            <h1 className="text-3xl font-bold text-[#333] mb-1">üöó ‡¶®‡¶§‡ßÅ‡¶® ‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</h1>
            <p className="text-sm text-gray-600">‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</p>
          </div>
          <Link
            to="/rent-cars"
            className="inline-flex items-center gap-2 px-5 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-800 transition duration-200 text-sm font-medium"
          >
            <FaArrowLeft />
            ‡¶´‡¶ø‡¶∞‡ßá ‡¶Ø‡¶æ‡¶®
          </Link>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Basic Information */}
          <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
            <div className="flex items-center gap-2 mb-4">
              <FaCar className="text-blue-500" />
              <h2 className="text-xl font-semibold text-gray-800">‡¶Æ‡ßå‡¶≤‡¶ø‡¶ï ‡¶§‡¶•‡ßç‡¶Ø</h2>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶¨‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° <span className="text-red-500">*</span>
                </label>
                <input
                  type="text"
                  name="brand"
                  value={formData.brand}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: Toyota, Honda, BMW"
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.brand ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                />
                {errors.brand && <p className="text-red-500 text-xs mt-1">{errors.brand}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Æ‡¶°‡ßá‡¶≤ <span className="text-red-500">*</span>
                </label>
                <input
                  type="text"
                  name="model"
                  value={formData.model}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: Corolla, Civic, X5"
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.model ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                />
                {errors.model && <p className="text-red-500 text-xs mt-1">{errors.model}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶¨‡¶õ‡¶∞ <span className="text-red-500">*</span>
                </label>
                <input
                  type="number"
                  name="year"
                  value={formData.year}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: 2020"
                  min="1990"
                  max={new Date().getFullYear() + 1}
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.year ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                />
                {errors.year && <p className="text-red-500 text-xs mt-1">{errors.year}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶® <span className="text-red-500">*</span>
                </label>
                <select
                  name="type"
                  value={formData.type}
                  onChange={handleInputChange}
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.type ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                >
                  <option value="">‡¶ß‡¶∞‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                  {carTypes.map(type => (
                    <option key={type.value} value={type.value}>
                      {type.label}
                    </option>
                  ))}
                </select>
                {errors.type && <p className="text-red-500 text-xs mt-1">{errors.type}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶∞‡¶Ç
                </label>
                <input
                  type="text"
                  name="color"
                  value={formData.color}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶∏‡¶æ‡¶¶‡¶æ, ‡¶ï‡¶æ‡¶≤‡ßã, ‡¶≤‡¶æ‡¶≤"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶∏‡¶Æ‡¶ø‡¶∂‡¶®
                </label>
                <select
                  name="transmission"
                  value={formData.transmission}
                  onChange={handleInputChange}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                >
                  <option value="">‡¶ü‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶∏‡¶Æ‡¶ø‡¶∂‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                  {transmissionTypes.map(type => (
                    <option key={type.value} value={type.value}>
                      {type.label}
                    </option>
                  ))}
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶ú‡ßç‡¶¨‡¶æ‡¶≤‡¶æ‡¶®‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶®
                </label>
                <select
                  name="fuelType"
                  value={formData.fuelType}
                  onChange={handleInputChange}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                >
                  <option value="">‡¶ú‡ßç‡¶¨‡¶æ‡¶≤‡¶æ‡¶®‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                  {fuelTypes.map(type => (
                    <option key={type.value} value={type.value}>
                      {type.label}
                    </option>
                  ))}
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Ü‡¶∏‡¶®‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ
                </label>
                <input
                  type="number"
                  name="seats"
                  value={formData.seats}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: 4, 5, 7"
                  min="1"
                  max="20"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                />
              </div>
            </div>
          </div>

          {/* Pricing Information */}
          <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
            <div className="flex items-center gap-2 mb-4">
              <FaMoneyBillWave className="text-green-500" />
              <h2 className="text-xl font-semibold text-gray-800">‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h2>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ (‡ß≥) <span className="text-red-500">*</span>
                </label>
                <input
                  type="number"
                  name="rentPerDay"
                  value={formData.rentPerDay}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: 1500"
                  min="0"
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.rentPerDay ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                />
                {errors.rentPerDay && <p className="text-red-500 text-xs mt-1">{errors.rentPerDay}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶∏‡¶æ‡¶™‡ßç‡¶§‡¶æ‡¶π‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ (‡ß≥)
                </label>
                <input
                  type="number"
                  name="rentPerWeek"
                  value={formData.rentPerWeek}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: 9000"
                  min="0"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ (‡ß≥)
                </label>
                <input
                  type="number"
                  name="rentPerMonth"
                  value={formData.rentPerMonth}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: 35000"
                  min="0"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                />
              </div>
            </div>
          </div>

          {/* Location and Contact */}
          <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
            <div className="flex items-center gap-2 mb-4">
              <FaMapMarkerAlt className="text-red-500" />
              <h2 className="text-xl font-semibold text-gray-800">‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶ì ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó</h2>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶® <span className="text-red-500">*</span>
                </label>
                <input
                  type="text"
                  name="location"
                  value={formData.location}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶¨‡¶ó‡ßÅ‡¶°‡¶º‡¶æ ‡¶∏‡¶¶‡¶∞, ‡¶∂‡ßá‡¶∞‡¶™‡ßÅ‡¶∞, ‡¶Ü‡¶¶‡¶Æ‡¶¶‡ßÄ‡¶ò‡¶ø"
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.location ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                />
                {errors.location && <p className="text-red-500 text-xs mt-1">{errors.location}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó‡ßá‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ <span className="text-red-500">*</span>
                </label>
                <input
                  type="tel"
                  name="contact"
                  value={formData.contact}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: 01712345678"
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.contact ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                />
                {errors.contact && <p className="text-red-500 text-xs mt-1">{errors.contact}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ <span className="text-red-500">*</span>
                </label>
                <input
                  type="text"
                  name="ownerName"
                  value={formData.ownerName}
                  onChange={handleInputChange}
                  placeholder="‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ"
                  className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 transition duration-200 ${
                    errors.ownerName ? 'border-red-300 focus:ring-red-200' : 'border-gray-300 focus:ring-blue-200'
                  }`}
                />
                {errors.ownerName && <p className="text-red-500 text-xs mt-1">{errors.ownerName}</p>}
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ
                </label>
                <select
                  name="status"
                  value={formData.status}
                  onChange={handleInputChange}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                >
                  <option value="Available">üü¢ ‡¶â‡¶™‡¶≤‡¶¨‡ßç‡¶ß</option>
                  <option value="Rented">üü° ‡¶≠‡¶æ‡¶°‡¶º‡¶æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ</option>
                  <option value="Maintenance">üî¥ ‡¶Æ‡ßá‡¶∞‡¶æ‡¶Æ‡¶§</option>
                  <option value="Reserved">üîµ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶ø‡¶§</option>
                </select>
              </div>
            </div>
          </div>

          {/* Additional Information */}
          <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
            <div className="flex items-center gap-2 mb-4">
              <FaInfoCircle className="text-blue-500" />
              <h2 className="text-xl font-semibold text-gray-800">‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø</h2>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞
                </label>
                <input
                  type="text"
                  name="registrationNumber"
                  value={formData.registrationNumber}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶¢‡¶æ‡¶ï‡¶æ-‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡ßã-‡¶ó-‡ßß‡ß®-‡ß©‡ß™‡ß´‡ß¨"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶Æ‡¶æ‡¶á‡¶≤‡ßá‡¶ú (‡¶ï‡¶ø‡¶Æ‡¶ø)
                </label>
                <input
                  type="number"
                  name="mileage"
                  value={formData.mileage}
                  onChange={handleInputChange}
                  placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: 50000"
                  min="0"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ
                </label>
                <select
                  name="condition"
                  value={formData.condition}
                  onChange={handleInputChange}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                >
                  <option value="">‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                  {conditions.map(condition => (
                    <option key={condition.value} value={condition.value}>
                      {condition.label}
                    </option>
                  ))}
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡¶¨‡ßÄ‡¶Æ‡¶æ
                </label>
                <input
                  type="text"
                  name="insurance"
                  value={formData.insurance}
                  onChange={handleInputChange}
                  placeholder="‡¶¨‡ßÄ‡¶Æ‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø"
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
                />
              </div>
            </div>

            <div className="mt-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£
              </label>
              <textarea
                name="description"
                value={formData.description}
                onChange={handleInputChange}
                rows="3"
                placeholder="‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
              />
            </div>

            <div className="mt-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø
              </label>
              <textarea
                name="additionalInfo"
                value={formData.additionalInfo}
                onChange={handleInputChange}
                rows="2"
                placeholder="‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¨‡¶æ ‡¶∂‡¶∞‡ßç‡¶§‡¶æ‡¶¨‡¶≤‡ßÄ..."
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-200 transition duration-200"
              />
            </div>
          </div>

          {/* Features */}
          <div className="bg-white border border-gray-200 rounded-lg shadow-md p-6">
            <div className="flex items-center gap-2 mb-4">
              <FaShieldAlt className="text-purple-500" />
              <h2 className="text-xl font-semibold text-gray-800">‡¶ó‡¶æ‡¶°‡¶º‡¶ø‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶∏‡¶Æ‡ßÇ‡¶π</h2>
            </div>
            
            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3">
              {availableFeatures.map(feature => (
                <label key={feature} className="flex items-center gap-2 cursor-pointer">
                  <input
                    type="checkbox"
                    checked={formData.features.includes(feature)}
                    onChange={() => handleFeatureToggle(feature)}
                    className="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                  />
                  <span className="text-sm text-gray-700">{feature}</span>
                </label>
              ))}
            </div>
          </div>

          {/* Submit Button */}
          <div className="flex justify-end gap-4">
            <Link
              to="/dashboard/rent-car-admin"
              className="px-6 py-3 bg-gray-500 hover:bg-gray-600 text-white rounded-lg font-medium transition duration-200"
            >
              ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®
            </Link>
            <button
              type="submit"
              disabled={loading}
              className="px-8 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg font-medium transition duration-200 flex items-center gap-2"
            >
              {loading ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent"></div>
                  ‡¶Ø‡ßã‡¶ó ‡¶π‡¶ö‡ßç‡¶õ‡ßá...
                </>
              ) : (
                <>
                  <FaSave />
                  ‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
                </>
              )}
            </button>
          </div>
        </form>

        <div className="mt-8 text-gray-500 text-xs text-center">
          ¬© 2025 ‡¶≠‡¶æ‡¶°‡¶º‡¶æ‡¶∞ ‡¶ó‡¶æ‡¶°‡¶º‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ | Developed by BoguraBashi
        </div>
      </div>
    </div>
  );
};

export default AddRentCar; 