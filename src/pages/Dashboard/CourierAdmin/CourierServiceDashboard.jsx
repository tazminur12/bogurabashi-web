import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import Swal from "sweetalert2";
import useAxiosSecure from "../../../hooks/useAxiosSecure";
import { FiTruck, FiMapPin, FiClock, FiPhone, FiUser, FiNavigation, FiPlus, FiEdit, FiTrash2, FiSearch, FiPackage, FiGlobe } from "react-icons/fi";

const CourierServiceDashboard = () => {
  const [couriers, setCouriers] = useState([]);
  const [isLoading, setIsLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterType, setFilterType] = useState('all');
  const navigate = useNavigate();
  const axiosSecure = useAxiosSecure();

  // üîÑ Fetch all courier data
  const fetchCouriers = async () => {
    try {
      setIsLoading(true);
      const res = await axiosSecure.get('/couriers');
      setCouriers(res.data);
    } catch (error) {
      console.error('Error fetching couriers:', error);
      Swal.fire("‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø", "‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø", "error");
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    fetchCouriers();
  }, []);

  // ‚ùå Delete handler
  const handleDelete = async (id) => {
    const confirm = await Swal.fire({
      title: "‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§?",
      text: "‡¶è‡¶á ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "‡¶π‡ßç‡¶Ø‡¶æ‡¶Å, ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶¶‡¶ø‡¶®!",
      cancelButtonText: "‡¶®‡¶æ",
    });

    if (confirm.isConfirmed) {
      try {
        const res = await axiosSecure.delete(`/couriers/${id}`);
        if (res.data.deletedCount > 0) {
          Swal.fire("‡¶∏‡¶´‡¶≤!", "‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá", "success");
          fetchCouriers();
        }
      } catch (error) {
        console.error('Error deleting courier:', error);
        Swal.fire("‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø!", "‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø", "error");
      }
    }
  };

  // Filter and search couriers
  const filteredCouriers = couriers.filter(courier => {
    const matchesSearch = 
      courier.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||
      courier.address?.toLowerCase().includes(searchTerm.toLowerCase()) ||
      courier.contact?.includes(searchTerm);
    
    const matchesFilter = filterType === 'all' || courier.type === filterType;
    
    return matchesSearch && matchesFilter;
  });

  const getTypeColor = (type) => {
    switch (type) {
      case 'domestic': return 'bg-green-100 text-green-800 border-green-200';
      case 'international': return 'bg-blue-100 text-blue-800 border-blue-200';
      case 'both': return 'bg-purple-100 text-purple-800 border-purple-200';
      default: return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const getTypeIcon = (type) => {
    switch (type) {
      case 'domestic': return 'üè†';
      case 'international': return 'üåç';
      case 'both': return 'üåê';
      default: return 'üì¶';
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-green-600 mx-auto mb-4"></div>
          <p className="text-gray-600 text-lg font-medium">‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 py-8 px-4">
      <div className="max-w-7xl mx-auto">
        {/* Header Section */}
        <div className="text-center mb-8">
          <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-green-600 to-emerald-600 rounded-full mb-4">
            <FiPackage className="w-8 h-8 text-white" />
          </div>
          <h1 className="text-4xl font-bold text-gray-800 mb-2">‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°</h1>
          <p className="text-gray-600 text-lg">‡¶¨‡¶ó‡ßÅ‡¶°‡¶º‡¶æ ‡¶ú‡ßá‡¶≤‡¶æ‡¶∞ ‡¶∏‡¶¨ ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡¶∞‡¶ø‡¶ö‡¶æ‡¶≤‡¶®‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®</p>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
            <div className="flex items-center">
              <div className="p-3 bg-blue-100 rounded-lg">
                <FiPackage className="w-6 h-6 text-blue-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">‡¶Æ‡ßã‡¶ü ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞</p>
                <p className="text-2xl font-bold text-gray-900">{couriers.length}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
            <div className="flex items-center">
              <div className="p-3 bg-green-100 rounded-lg">
                <FiMapPin className="w-6 h-6 text-green-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">‡¶¶‡ßá‡¶∂‡ßÄ‡¶Ø‡¶º</p>
                <p className="text-2xl font-bold text-gray-900">{couriers.filter(c => c.type === 'domestic').length}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
            <div className="flex items-center">
              <div className="p-3 bg-purple-100 rounded-lg">
                <FiGlobe className="w-6 h-6 text-purple-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">‡¶Ü‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶ú‡¶æ‡¶§‡¶ø‡¶ï</p>
                <p className="text-2xl font-bold text-gray-900">{couriers.filter(c => c.type === 'international').length}</p>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
            <div className="flex items-center">
              <div className="p-3 bg-yellow-100 rounded-lg">
                <FiNavigation className="w-6 h-6 text-yellow-600" />
              </div>
              <div className="ml-4">
                <p className="text-sm font-medium text-gray-600">‡¶â‡¶≠‡¶Ø‡¶º</p>
                <p className="text-2xl font-bold text-gray-900">{couriers.filter(c => c.type === 'both').length}</p>
              </div>
            </div>
          </div>
        </div>

        {/* Search and Filter Section */}
        <div className="bg-white rounded-xl shadow-lg p-6 mb-8 border border-gray-100">
          <div className="flex flex-col lg:flex-row gap-4 items-center justify-between">
            <div className="flex-1 max-w-md">
              <div className="relative">
                <FiSearch className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  type="text"
                  placeholder="‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ, ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¨‡¶æ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                />
              </div>
            </div>

            <div className="flex gap-4">
              <select
                value={filterType}
                onChange={(e) => setFilterType(e.target.value)}
                className="px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
              >
                <option value="all">‡¶∏‡¶¨ ‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞</option>
                <option value="domestic">‡¶¶‡ßá‡¶∂‡ßÄ‡¶Ø‡¶º</option>
                <option value="international">‡¶Ü‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶ú‡¶æ‡¶§‡¶ø‡¶ï</option>
                <option value="both">‡¶â‡¶≠‡¶Ø‡¶º</option>
              </select>

              <button
                onClick={() => navigate('/dashboard/add-courier')}
                className="inline-flex items-center px-6 py-3 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold rounded-lg shadow-lg transition-all duration-200 transform hover:scale-105"
              >
                <FiPlus className="w-5 h-5 mr-2" />
                ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
              </button>
            </div>
          </div>
        </div>

        {/* Couriers Table */}
        <div className="bg-white rounded-xl shadow-lg border border-gray-100 overflow-hidden">
          <div className="overflow-x-auto">
            <table className="min-w-full">
              <thead className="bg-gradient-to-r from-green-600 to-emerald-600">
                <tr>
                  <th className="px-6 py-4 text-left text-white font-semibold">‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞</th>
                  <th className="px-6 py-4 text-left text-white font-semibold">‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ</th>
                  <th className="px-6 py-4 text-left text-white font-semibold">‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó</th>
                  <th className="px-6 py-4 text-left text-white font-semibold">‡¶ß‡¶∞‡¶®</th>
                  <th className="px-6 py-4 text-center text-white font-semibold">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200">
                {filteredCouriers.map((courier, index) => (
                  <tr key={courier._id} className={`hover:bg-gray-50 transition-colors ${index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}`}>
                    <td className="px-6 py-4">
                      <div className="flex items-center">
                        <FiPackage className="w-4 h-4 text-blue-600 mr-2" />
                        <span className="font-medium text-gray-900">{courier.name}</span>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center">
                        <FiMapPin className="w-4 h-4 text-green-600 mr-2" />
                        <span className="text-gray-700">{courier.address}</span>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center">
                        <FiPhone className="w-4 h-4 text-green-600 mr-2" />
                        <span className="text-gray-700">{courier.contact}</span>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center">
                        <span className="text-xl mr-2">{getTypeIcon(courier.type)}</span>
                        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${getTypeColor(courier.type)}`}>
                          {courier.type === 'domestic' && '‡¶¶‡ßá‡¶∂‡ßÄ‡¶Ø‡¶º'}
                          {courier.type === 'international' && '‡¶Ü‡¶®‡ßç‡¶§‡¶∞‡ßç‡¶ú‡¶æ‡¶§‡¶ø‡¶ï'}
                          {courier.type === 'both' && '‡¶â‡¶≠‡¶Ø‡¶º'}
                        </span>
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="flex items-center justify-center space-x-2">
                        <button
                          onClick={() => navigate(`/dashboard/edit-courier/${courier._id}`)}
                          className="inline-flex items-center px-3 py-2 bg-yellow-500 hover:bg-yellow-600 text-white text-sm font-medium rounded-lg transition-colors"
                        >
                          <FiEdit className="w-4 h-4 mr-1" />
                          ‡¶è‡¶°‡¶ø‡¶ü
                        </button>
                        <button
                          onClick={() => handleDelete(courier._id)}
                          className="inline-flex items-center px-3 py-2 bg-red-500 hover:bg-red-600 text-white text-sm font-medium rounded-lg transition-colors"
                        >
                          <FiTrash2 className="w-4 h-4 mr-1" />
                          ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          {filteredCouriers.length === 0 && (
            <div className="text-center py-12">
              <FiPackage className="w-16 h-16 text-gray-400 mx-auto mb-4" />
              <h3 className="text-lg font-medium text-gray-900 mb-2">‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø</h3>
              <p className="text-gray-500">
                {searchTerm || filterType !== 'all' 
                  ? '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶®‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Æ‡¶ø‡¶≤‡ßá ‡¶è‡¶Æ‡¶® ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶®‡ßá‡¶á‡•§' 
                  : '‡¶è‡¶ñ‡¶®‡¶ì ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø‡•§'
                }
              </p>
              {!searchTerm && filterType === 'all' && (
                <button
                  onClick={() => navigate('/dashboard/add-courier')}
                  className="mt-4 inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors"
                >
                  <FiPlus className="w-4 h-4 mr-2" />
                  ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶ï‡ßÅ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              )}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default CourierServiceDashboard;
